Approach to Authentication:

    Run the familiar blog application as the example: 
        Logged in user: {{request.user}}
            requests the user that has the potential of the log in
        request.user.is.authenticated 
            method for checking if user is authenticated or not
        In the views for the showallview that inherits from ListView 
            def dispatch(self, *args, **kwargs):
                return super().dispatch(args, kwargs)
        Go to urls.py withing the app and create a path for login/ and use the loginView as the view for inherits
        kdsa
        Create a new login.html in the templates direcotory 
            Create a form and the action="{% url 'login' %'}
                give proper tokens and include a submit button.
                correct the path name and stuff like that 
            The logout link :
                Create the logout url path
                and specify the next_page once they are logged out and there is a logout procedure 
                how did that work? hmm unless logout is already defined for you 
                    This is done thorugh in the login.html specify hte next page 
                    There s this thing called auth_views.LogoutView 
                Something related to has to be a post rather than a get that might raise HTTP erroor 

Associate the article with the user every article has one user and one user has multiple articles
    - many to one relation from article to user with a participation constraint on article
    provide a default 